import psutil
import os

def get_process_info(proc):
    try:
        with proc.oneshot():
            pid = proc.pid
            name = proc.name()
            exe = proc.exe()
            cmdline = proc.cmdline()
            ppid = proc.ppid()
            status = proc.status()
            create_time = proc.create_time()
            username = proc.username()
            cpu_percent = proc.cpu_percent(interval=1.0)
            memory_info = proc.memory_info()
            open_files = proc.open_files()
            connections = proc.connections()
            return {
                'pid': pid,
                'name': name,
                'exe': exe,
                'cmdline': cmdline,
                'ppid': ppid,
                'status': status,
                'create_time': create_time,
                'username': username,
                'cpu_percent': cpu_percent,
                'memory_info': memory_info,
                'open_files': open_files,
                'connections': connections,
            }
    except (psutil.NoSuchProcess, psutil.AccessDenied, psutil.ZombieProcess):
        return None

def check_suspicious(proc_info):
    suspicious_conditions = [
        lambda p: not p['exe'] or not os.path.exists(p['exe']),
        lambda p: p['cpu_percent'] > 80.0,
        lambda p: p['memory_info'].rss > (500 * 1024 * 1024),  # > 500 MB
        lambda p: 'svchost' in p['name'].lower() and len(p['cmdline']) > 1,
    ]
    return any(cond(proc_info) for cond in suspicious_conditions)

def main():
    for proc in psutil.process_iter(['pid', 'name']):
        proc_info = get_process_info(proc)
        if proc_info:
            print(f"Process ID: {proc_info['pid']}, Name: {proc_info['name']}")
            if check_suspicious(proc_info):
                print("  Suspicious process detected!")
                print(f"  Executable: {proc_info['exe']}")
                print(f"  Command Line: {proc_info['cmdline']}")
                print(f"  CPU Usage: {proc_info['cpu_percent']}%")
                print(f"  Memory Usage: {proc_info['memory_info'].rss / (1024 * 1024)} MB")
                print(f"  Parent PID: {proc_info['ppid']}")
                print(f"  Status: {proc_info['status']}")
                print(f"  Created At: {proc_info['create_time']}")
                print(f"  User: {proc_info['username']}")
                print(f"  Open Files: {proc_info['open_files']}")
                print(f"  Connections: {proc_info['connections']}")

if __name__ == "__main__":
    main()